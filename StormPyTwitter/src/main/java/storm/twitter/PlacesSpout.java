package storm.twitter;

import java.util.Map;

import backtype.storm.Config;
import backtype.storm.spout.ShellSpout;
import backtype.storm.topology.IRichSpout;
import backtype.storm.topology.OutputFieldsDeclarer;
import backtype.storm.tuple.Fields;

/**
 * Paralelism: 
 * in https://groups.google.com/forum/#!topic/storm-user/LEnEB4k_SG4, there is currently a bug by which Storm doesn't send 
 * the "taskid" to the spouts on the initial handshake of the multilang protocol. As a consequence no split of the places 
 * can be performed in the spout. To cope with that, this spout is sequential and just emits a tuple per each place with a 
 * fixed frequency, and the next bolt performs a parallel lookup for trending topics splitting by place.  
 * 
 * Resources and Shell Spouts: 
 * Some care must be taken to have the python scripts included correctly. Following https://github.com/apache/incubator-storm/blob/d5dee0ef5f8ad403d1eff05f569c8e9b1e44508c/examples/storm-starter/pom.xml
 * the steps are:
 * 	- Keep all the scripts in a folder multilang/resources where multilang is at the root of the project
 *  - Add that directory as a resource with the following tag inside the <build> tag. As a result a /resources directry with all
 *  the scripts appears at generated jar, and the script can be referred with local path in call to the constructor of the ShellSpout below
 *  
 *   <resources>
			<resource>
				<directory>${basedir}/multilang</directory>
			</resource>
		</resources>
		
But what Storm is looking for is a resources folder at the root of the jar, and then the path used in the call to the constructor of the ShellSpout
is local to that resources folder. Hence, another possible organization is:
 	- Store the python sources in src/main/multilang/resources/python/
 	- Use <directory>${basedir}/src/main/multilang</directory> in the resource declaration
 	- Use "python/trends_spout.py" as the path in the call to the constructor for ShellSpout
 	
To run from eclipse add ${workspace_loc:storm-py-twitter/src/main/multilang/resources} as the working directory, otherwise local paths to scripts
won't work
 * */
public class PlacesSpout extends ShellSpout implements IRichSpout {

	/**
	 * Generated by Eclipse
	 */
	private static final long serialVersionUID = -6549074013830073704L;
	private static final int DEFAULT_FREQ = 10; //FIXME
	private static final String FREQUENCY_CONF_KEY = "PlacesSpoutFrequency";
	/**
	 * Tick frequency in seconds
	 * */
	private int tickFrequency;
	
	public PlacesSpout() {
		this(DEFAULT_FREQ);
	}
	
	public PlacesSpout(int freq) {
		// Note the use of a specific python version
		// super("python2.7", "trends_spout.py");
		super("python2.7", "python/twitter_storm/places_spout.py");
		this.tickFrequency = freq;
	}
	
	@Override
	public void declareOutputFields(OutputFieldsDeclarer declarer) {
		declarer.declare(new Fields(TopologyFields.PLACE));
	}


	/**
	 * Change configuration to generate tuples for each place with frequency this.tickFrequency 	 
	 * */
	@Override
	public Map<String, Object> getComponentConfiguration() {
		Config conf = new Config();
        conf.put(FREQUENCY_CONF_KEY, this.tickFrequency);
        return conf;
	}
}
